@using SigortaApp.Entity.Dto;
@model List<PaymentDto>
@{
    ViewData["Title"] = "GetCompanyDetails";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header d-flex align-items-center" style="background-color:#059669;">
                <h5 class="mb-0">Şirket Bilgileri</h5>
            </div>
            <table class="table">
                <tbody>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Firma Adı:</strong></td>
                        <td class="fs16">@Model[0].Company.Name</td>
                    </tr>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Unvan:</strong></td>
                        <td class="fs16">@Model[0].Company.Title</td>
                    </tr>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Cari Grup:</strong></td>
                        <td class="fs16">@Model[0].CurrentGroupName</td>
                    </tr>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Telefon:</strong></td>
                        <td class="fs16">@Model[0].Company.Phone</td>
                    </tr>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Cep Telefonu:</strong></td>
                        <td class="fs16">@Model[0].Company.MobilePhone</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header d-flex align-items-center" style="background-color:#059669;">
                <h5 class="mb-0">Cari Bakiye</h5>
            </div>
            <table class="table">
                <tbody>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Alınan:</strong></td>
                        <th class="fs16" style="color:green">₺&nbsp;@Model[0].Alınan</th>
                    </tr>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Toplam İş Tutarı:</strong></td>
                        <th class="fs16">₺&nbsp;@Model[0].Borc</th>
                    </tr>
                    <tr>
                        <td class="fs16" style="width:150px"><strong>Cari Bakiye:</strong></td>
                        @if (Model[0].CariBakiye > 0)
                        {
                            <th class="fs16" style="color:green">₺&nbsp;@Model[0].CariBakiye</th>
                        }else if(Model[0].CariBakiye < 0)
                        {
                            <th class="fs16" style="color:red">₺&nbsp;@Model[0].CariBakiye</th>
                        }else
                        {
                            <th class="fs16">₺&nbsp;@Model[0].CariBakiye</th>
                        }
                        
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header d-flex align-items-center" style="background-color:#059669;">
                <h5 class="mb-0">İşlemler</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <button type="button" class="btn btn-warning" style="float:right;" data-bs-toggle="modal" onclick="funcStatusOdeme()" data-bs-target="#modalOdeme"><i class="ph-plus-circle ms-2"></i>&nbsp; Ödeme Yap </button>
                </div>
                <br />
                <div class="row">
                    <button class="btn btn-warning" data-bs-toggle="modal" onclick="funcStatusTahsilatYap()" data-bs-target="#modalOdeme" type="button"><i class="ph-plus-circle ms-2"></i>&nbsp; Tahsilat Yap</button>
                </div>
                <br />
                <div class="row">
                    <button class="btn btn-info" data-bs-toggle="modal" onclick="funcStatusAlacaklandir()" data-bs-target="#modalOdeme" type="button"><i class="ph-plus-circle ms-2"></i>&nbsp; Alacaklandır</button>
                </div>
                <br />
                <div class="row">
                    <button class="btn btn-info" data-bs-toggle="modal" onclick="funcStatusBorclanir()" data-bs-target="#modalOdeme" type="button"><i class="ph-plus-circle ms-2"></i>&nbsp; Borçlandırma</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="compView">
    <ul class="nav nav-tabs mb-3">
        <li class="nav-item">
            <a href="#js-tab1" class="nav-link active" data-bs-toggle="tab">
                Ödeme Listesi
            </a>
        </li>

        @*<li class="nav-item">
            <a href="#js-tab2" class="nav-link" data-bs-toggle="tab">
                İş Listesi
            </a>
        </li>*@
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade show active" id="js-tab1">
            @await Component.InvokeAsync("CompanyPaymentComp",Model[0].Company.Id)
        </div>

        @*<div class="tab-pane fade" id="js-tab2">
            @await Component.InvokeAsync("CompanyTaskComp",Model[0].Company.Id)
        </div>*@
    </div>

</div>


<div class="modal fade" id="modalOdeme" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitleId">Ödeme</h5>
                <button type="button" class="btn-close" onclick="funcCardCssSetClear()" data-bs-dismiss="modal"></button>
            </div>

            <form method="post" action="@Url.Action("AddPayment", "Payment")">
                <div class="modal-body">
                    <input type="text" id="payId" name="Id" value="0" hidden />
                    <input type="text" id="statusid" name="StatusId" value="0" hidden />
                    <input type="text" id="companyid" name="CompanyId" value="0" hidden />
                    <div class="form-control">
                        <label>Tarih</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="ph-calendar"></i></span>
                            @*<input type="text" name="BusDate" class="form-control daterange-single">@*value="DateTime.Now.ToString("DD/MMM/YYYY h:mm A")"*@
                            <input class="form-control" type="datetime-local" name="CreatedDate" id="creatDate">
                        </div>
                    </div>
                    <br />
                    <div class="form-control">
                        <label>Ödeme Türü</label>
                        @*<input type="text" name="Name" class="form-control" />*@
                        @Html.DropDownList("PaymentMethodId",ViewBag.uv,"Ödeme Türü Seçiniz..",new { @class = "form-control select", @id="paymentMethodId", @onchange="funcGetBankAndCase()" })
                    </div>
                    <br />
                    <div class="form-control" id="bankDiv">
                        <label>Banka Seçimi</label>
                        @Html.DropDownList("BankAccountId",ViewBag.bav,"Banka Seçiniz..",new { @class = "form-control select", @id="bankAccountId" })
                    </div>
                    <div class="form-control" id="kasaDiv">
                        <label>Kasa Seçimi</label>
                        @Html.DropDownList("CaseId",ViewBag.cas,"Kasa Seçiniz..",new { @class = "form-control select", @id="caseId" })
                    </div>
                    <br />
                    <div class="form-control">
                        <label>Açıklama</label>
                        <input type="text" name="Description" id="desc" class="form-control" placeholder="Açıklama girebilirsiniz.." />
                    </div>
                    <br />
                    <div class="form-control" id="priceclass222">
                        <label>Tutar (₺)</label>
                        <input type="number" name="Price" class="form-control" id="currency-field" @*pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$"*@ value="" @* data-type="currency"*@ placeholder="₺1,000,000.00">
                        @*<input type="number" max="1000000000"  min="1" id="price" name="Price" value="1" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" required />*@
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white" onclick="funcCardCssSetClear()" data-bs-dismiss="modal">Vazgeç</button>
                    <input type="submit" class="btn btn-primary" value="Kaydet" />
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="myModalGecmis" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" onclick="funcCardCssSetClear()" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-white" onclick="funcCardCssSetClear()" data-bs-dismiss="modal">Vazgeç</button>
                <input type="submit" class="btn btn-primary" value="Kaydet" />
            </div>
        </div>
    </div>
</div>

<div id="taskHistoryModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" style="background-color:lavender">
            <div class="modal-header">
                <h5 class="modal-title">İş Detayı</h5>
                <button type="button" class="btn-close" onclick="funcCloseModal()" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" style="background-color: #fbf9f9;">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" onclick="funcCloseModal()" data-bs-dismiss="modal">Kapat</button>
                @*<button type="submit" class="btn btn-primary">Kaydet</button>*@
            </div>
        </div>
    </div>
</div>

<script>

    function funcStatusOdeme() {
        funcCardCssSet();
        $("#modalOdeme").find('.modal-title').text("ÖDEME");
        $('#paymentMethodId').prop('disabled', false);
        $('#bankDiv').hide();
        $('#kasaDiv').show();
        document.getElementById("statusid").value = @((int)SigortaApp.Entity.Enums.OdemeTuruEnum.Odeme);
        document.getElementById("companyid").value = @Model[0].Company.Id;
    }

    function funcStatusTahsilatYap() {
        funcCardCssSet();
        $("#modalOdeme").find('.modal-title').text("TAHSİLAT YAP");
        $('#paymentMethodId').prop('disabled', false);
        $('#bankDiv').hide();
        $('#kasaDiv').show();
        document.getElementById("statusid").value = @((int)SigortaApp.Entity.Enums.OdemeTuruEnum.Tahsilat);
        document.getElementById("companyid").value = @Model[0].Company.Id;
    }

    function funcStatusBorclanir() {
        funcCardCssSet();
        $("#modalOdeme").find('.modal-title').text("BORÇLANDIRMA");
        $("#paymentMethodId").val(@((int)SigortaApp.Entity.Enums.OdemeTuruEnum.AcikHesap)).trigger('change');//Açık hesap yapılacak.
        $('#paymentMethodId').prop('disabled', true);
        $('#bankDiv').hide();
        $('#kasaDiv').show();
        document.getElementById("statusid").value = @((int)SigortaApp.Entity.Enums.OdemeTuruEnum.Borclandirma);
        //document.getElementById("paymentMethodId").value = @((int)SigortaApp.Entity.Enums.OdemeTuruEnum.AcikHesap);
        document.getElementById("companyid").value = @Model[0].Company.Id;
    }

    function funcStatusAlacaklandir() {
        funcCardCssSet();
        $("#modalOdeme").find('.modal-title').text("ALACAKLANDIRMA");
        $("#paymentMethodId").val(@((int)SigortaApp.Entity.Enums.OdemeTuruEnum.AcikHesap)).trigger('change');//Açık hesap yapılacak.
        $('#paymentMethodId').prop('disabled', true);
        $('#bankDiv').hide();
        $('#kasaDiv').show();
        document.getElementById("statusid").value = @((int)SigortaApp.Entity.Enums.OdemeTuruEnum.Alacaklandirma);
        document.getElementById("paymentMethodId").value = @((int)SigortaApp.Entity.Enums.OdemeTuruEnum.AcikHesap);
        document.getElementById("companyid").value = @Model[0].Company.Id;
    }

    function funcGetBankAndCase() {
        var selected = $("#paymentMethodId").val();
        if (selected == '6' || selected == '7') {
            $('#bankDiv').show();
            $('#kasaDiv').hide();
        } else {
            $('#bankDiv').hide();
            $('#kasaDiv').show();
        }
    }


    $("input[data-type='currency']").on({
        keyup: function () {
            formatCurrency($(this));
        },
        blur: function () {
            formatCurrency($(this), "blur");
        }
    });


    function formatNumber(n) {
        // format number 1000000 to 1,234,567
        return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    }


    function formatCurrency(input, blur) {
        // appends $ to value, validates decimal side
        // and puts cursor back in right position.

        // get input value
        var input_val = input.val();

        // don't validate empty input
        if (input_val === "") { return; }

        // original length
        var original_len = input_val.length;

        // initial caret position
        var caret_pos = input.prop("selectionStart");

        // check for decimal
        if (input_val.indexOf(".") >= 0) {

            // get position of first decimal
            // this prevents multiple decimals from
            // being entered
            var decimal_pos = input_val.indexOf(".");

            // split number by decimal point
            var left_side = input_val.substring(0, decimal_pos);
            var right_side = input_val.substring(decimal_pos);

            // add commas to left side of number
            left_side = formatNumber(left_side);

            // validate right side
            right_side = formatNumber(right_side);

            // On blur make sure 2 numbers after decimal
            if (blur === "blur") {
                right_side += "00";
            }

            // Limit decimal to only 2 digits
            right_side = right_side.substring(0, 2);

            // join number by .
            input_val = "" + left_side + "." + right_side;

        } else {
            // no decimal entered
            // add commas to number
            // remove all non-digits
            input_val = formatNumber(input_val);
            input_val = "" + input_val;

            // final formatting
            if (blur === "blur") {
                input_val += ".00";
            }
        }

        // send updated string to input
        input.val(input_val);

        // put caret back in the right position
        var updated_len = input_val.length;
        caret_pos = updated_len - original_len + caret_pos;
        input[0].setSelectionRange(caret_pos, caret_pos);
    }

    $(document).ready(function () {
        $('#example').DataTable({
            "columnDefs": [{
                "targets": [0]
            }],
        });
    });

    $("#paymentMethodId").select2({
        placeholder: "Ödeme Türü Seçiniz..",
        theme: "bootstrap4",
        allowClear: true,
        dropdownParent: $('#modalOdeme')
    });

    $("#bankAccountId").select2({
        placeholder: "Banka Seçiniz..",
        theme: "bootstrap4",
        allowClear: true,
        dropdownParent: $('#modalOdeme')
    });

    $("#caseId").select2({
        placeholder: "Kasa Seçiniz..",
        theme: "bootstrap4",
        allowClear: true,
        dropdownParent: $('#modalOdeme')
    });
    function funcClearRows() {
        document.getElementById("brandId").value = "";
        document.getElementById("typesId").value = "";
    }

    function funcCardCssSet() {
        document.getElementById("cardCss").style.opacity = 0.35;
    }

    function funcCardCssSetClear() {
        document.getElementById("cardCss").style.opacity = 1;
    }

    function funcShowModal(e, s, c) {
        funcCardCssSet();
        document.getElementById("devceReleaseid").value = e;
        document.getElementById("devceReleaseCompanyid").value = c;
        let TRPrice = new Intl.NumberFormat('tr-TR', {
            style: 'currency',
            currency: 'TRY',
        });
        $("#topAmount")[0].innerText = TRPrice.format(s);
    }

    function funcGetLastPayment(id) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetLastPayment","DevicesRelease")",
            data: { deviceId: id },
            success: function (response) {
                $("#myModalGecmis").find(".modal-body").html(response);
                $("#myModalGecmis").modal('show');
                funcCardCssSet();

            },
            error: function (req, status, error) {
                console.log(response);
            }
        });
    }

</script>

<style>
    .toggle-off.btn {
        padding-left: 1.2rem;
    }

    .modal-backdrop.show {
        opacity: 0.35;
        overflow-x: hidden;
        overflow-y: auto;
    }

    .modal.fade.show {
        z-index: 2055;
        overflow-x: hidden;
        overflow-y: auto;
    }

    /*.modal-backdrop.fade {
                                                                                                                                                                                                opacity:0;
                                                                                                                                                                                            }*/
    .page-content {
        z-index: 1;
    }

    /*.card{
                                                                                                                                                                                                opacity:0.35;
                                                                                                                                                                                            }*/
</style>